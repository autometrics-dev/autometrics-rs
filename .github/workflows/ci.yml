on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

name: CI

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2

      # Lint
      # Note: GitHub hosted runners using the latest stable version of Rust have Clippy pre-installed.
      - run: cargo clippy --features=metrics,prometheus-exporter
      - run: cargo clippy --features=prometheus
      - run: cargo clippy --features=prometheus-client
      - run: cargo clippy --features=opentelemetry

      # Run the tests with each of the different metrics libraries
      - run: cargo test --features=prometheus-exporter
      - run: cargo test --features=prometheus-exporter,metrics
      - run: cargo test --features=prometheus-exporter,prometheus
      - run: cargo test --features=prometheus-exporter,prometheus-client,exemplars-tracing
      - run: cargo test --features=prometheus-exporter,prometheus-client,exemplars-tracing-opentelemetry
      # The tests using opentelemetry are currently failing because of this issue:
      # https://github.com/open-telemetry/opentelemetry-rust/issues/1070
      # We should remove the continue-on-error once that is fixed
      - run: cargo test --features=prometheus-exporter,opentelemetry
        continue-on-error: true

      # Build the crate using the other optional features
      - run: cargo build --features=metrics,custom-objective-percentile,custom-objective-latency

      # Compile the examples
      - run: cargo build --package example-actix-web
      - run: cargo build --package example-axum
      - run: cargo build --package example-custom-metrics
      - run: cargo build --package example-full-api
      - run: cargo build --package example-exemplars-tracing

      # Make sure the docs can be built
      - run: cargo doc --all-features
